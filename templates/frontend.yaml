# frontend 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: {{ .Values.app.frontend.replicaCount }}
  template: 
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: frontend
    spec:
      containers:
      #test93fixed {{ .Values.image.repository }}
      - name: frontend
        image: {{ .Values.image.repository}}/frontend:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3000

        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 80
          periodSeconds: 10
          
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 80
          periodSeconds: 10
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 3000
  externalTrafficPolicy: Local
  type: LoadBalancer

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend
  namespace: default
  annotations:
    metric-config.object.istio-requests-total.prometheus/per-replica: "true"
    metric-config.object.istio-requests-total.prometheus/query: |
      sum(
          rate(
              istio_requests_total{
                destination_workload="frontend",
                destination_workload_namespace="default",
                reporter="destination"
              }[1m]
          )
      ) /
      count(
        count(
          container_memory_usage_bytes{
            namespace="default",
          pod=~"frontend.*"
          }
        ) by (pod)
      )
spec:
  maxReplicas: {{ .Values.hpa.frontend.maxReplicas }}
  minReplicas: {{ .Values.hpa.frontend.minReplicas }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  metrics:
    - type: Object
      object:
        metric:
          name: istio-requests-total
        describedObject:
          apiVersion: v1
          kind: Pod
          name: frontend
        target:
          type: Value
          value: {{ .Values.hpa.frontend.targetValue }}



